// Generated by CoffeeScript 1.3.3
(function() {

  Ext.setup({
    tabletStartupScreen: "tablet_startup.png",
    phoneStartupScreen: "phone_startup.png",
    icon: "icon.png",
    glossOnIcon: false,
    onReady: function() {
      var all_entries, carousel1, groupingBase, list;
      Ext.regModel("Entry", {
        fields: ["text", "create_time", "tags", "date", "seconds"]
      });
      all_entries = get_entry_from_spine();
      window.store = new Ext.data.Store({
        model: "Entry",
        sorters: {
          property: "seconds",
          direction: "DESC"
        },
        getGroupString: function(record) {
          return record.get("date");
        },
        data: all_entries
      });
      groupingBase = {
        itemTpl: "<div class=\"maintext\">{text}</div> <div class=\"timetext\">{create_time}</div>",
        singleSelect: false,
        multiSelect: false,
        grouped: true,
        indexBar: false,
        /*
              onItemTap: ()->
                console.log("testing item tap")
                  #alert "Disclose more info for " + record.get("firstName")
                  console.log( record.data )
                  window.r_id = record.data.id
                  $("#buttonbar").show()
                  $("#writearea").val(record.get("text"))
                  window.carousel.setActiveItem( 0, 'flip' )
        */

        onItemDisclosure: {
          scope: "test",
          handler: function(record, btn, index) {
            console.log(record.data);
            window.r_id = record.data.id;
            $("#buttonbar").show();
            $("#writearea").val(record.get("text"));
            return window.carousel.setActiveItem(0, 'flip');
          }
        },
        listener: {
          itemtap: function(list, index, item, e) {
            return e.preventDefault();
          }
        },
        store: window.store
      };
      list = new Ext.List(Ext.apply(groupingBase, {
        id: "entry_list",
        centered: true,
        modal: true,
        html: "<div id='entryfilter' style='position: absolute; width: 100%; height: 40px; bottom: 0px; background-color: #050'>ABCDE</div>"
      }));
      window.list = list;
      carousel1 = new Ext.Carousel({
        defaults: {
          cls: "card"
        },
        items: [
          {
            html: "<textarea type=\"textarea\" id='writearea' placeholder='Tap and add your entry; Hit return to save' style=\"border:0px;border-radius:0px;padding:20px;font-size:30px;color:#fff;width:100%;height:100%;background-image: url(img/asfalt.png);\"></textarea>\n<div id=\"buttonbar\">\n  <a class=\"button\" onclick=\"window.save_entry()\">Save</a>\n  <a class=\"button\" id=\"rightbutton\" onclick=\"window.delete_entry()\">Delete</a>\n</div>"
          }, list, {
            title: "Tab 3",
            html: "<div style=\"background-image: url(img/linen.png);height:100%;width:100%;text-align:center;\">\n  <br />\n  <p style=\"color: #fff; padding: 20px; padding-bottom: 0px;\">Sync all your entries across multiple devices by setting up storage on Dropbox.</p>\n  <p style=\"color: #fff; padding: 20px\">First click on authorize and then allow data access on the Dropbox link in the browser. Then click on validate back in the app.</p>\n  \n  <a class=\"large blue awesome\" onclick=\"window.auth()\">Authorize</a><br />\n  <a class=\"large blue awesome\" onclick=\"window.validate()\">Validate</a><br />\n\n  <a class=\"large black awesome\" onclick=\"window.sync_entry()\">Sync All</a>\n</div>"
          }
        ]
      });
      window.carousel = carousel1;
      carousel1.addListener("cardswitch", function(obj, newCard, oldCard, index, animated) {
        if (index !== 0) {
          if (window.rid !== "") {
            $("#writearea").val("");
          }
          return $("#buttonbar").hide();
        }
      });
      new Ext.Panel({
        fullscreen: true,
        layout: {
          type: "vbox",
          align: "stretch"
        },
        defaults: {
          flex: 1
        },
        items: [carousel1]
      });
      return $("#writearea").keydown(function(e) {
        var keyCode;
        keyCode = e.keyCode || e.which;
        if (keyCode === 13) {
          window.create_new_entry();
          return false;
        }
      });
    }
  });

}).call(this);
